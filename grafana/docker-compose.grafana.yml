version: '3.9'

services:
  alertmanager:
    image: 'prom/alertmanager:${ALERTMANAGER_IMAGE_VERSION:-v0.21.0}'
    healthcheck:
      test: ['CMD',
             'wget', '-q', '--spider', '--proxy=off', 'localhost:9092/metrics']
    labels:
      traefik.enable: true
      traefik.http.routers.alertmanager.middlewares: 'basic_auth@docker'
      traefik.http.routers.alertmanager.rule: 'Host(`alertmanager.${SITE:-localhost}`)'
      traefik.http.services.alertmanager.loadbalancer.server.port: 9093
    networks:
      - 'srv'
    restart: 'always'

  cadvisor:
    image: 'gcr.io/cadvisor/cadvisor:${CADVISOR_IMAGE_VERSION:-latest}'
    devices:
      - '/dev/kmsg:/dev/kmsg'
    labels:
      traefik.enable: true
      traefik.http.routers.cadvisor.middlewares: 'basic_auth@docker'
      traefik.http.routers.cadvisor.rule: 'Host(`cadvisor.${SITE:-localhost}`)'
      traefik.http.services.cadvisor.loadbalancer.server.port: 8080
    networks:
      - 'srv'
    privileged: true
    restart: 'always'
    volumes:
      - '/:/rootfs:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/var/run:/var/run:ro'

  grafana:
    image: 'grafana/grafana-oss:${GRAFANA_IMAGE_VERSION:-7.2.2}'
    depends_on:
      - 'prometheus'
    environment:
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#reporting_enabled
      GF_ANALYTICS_REPORTING_ENABLED: 'false'
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: 'Admin'
      GF_AUTH_BASIC_ENABLED: 'false'
      GF_AUTH_DISABLE_LOGIN_FORM: 'true'
      GF_AUTH_DISABLE_SIGNOUT_MENU: 'true'
      GF_INSTALL_PLUGINS: 'grafana-piechart-panel'
      GF_METRICS_ENABLED: 'true'
      GF_USERS_ALLOW_SIGN_UP: 'false'
    healthcheck:
      # https://github.com/grafana/grafana/pull/27536
      test: ['CMD', 'curl', '0.0.0.0:3000/healthz']
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.middlewares: 'basic_auth@docker'
      traefik.http.routers.grafana.rule: 'Host(`grafana.${SITE:-localhost}`)'
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    networks:
      - 'srv'
    restart: 'always'
    user: '1000:1000'
    volumes:
      - './grafana:/var/lib/grafana'

  node_exporter:
    image: 'prom/node-exporter:${NODE_EXPORTER_IMAGE_VERSION:-v1.0.1}'
    healthcheck:
      test: ['CMD',
             'wget', '-q', '--spider', '--proxy=off', 'localhost:9100/metrics']
    labels:
      traefik.enable: true
      traefik.http.routers.node_exporter.middlewares: 'basic_auth@docker'
      traefik.http.routers.node_exporter.rule: 'Host(`node_exporter.${SITE:-localhost}`)'
      traefik.http.services.node_exporter.loadbalancer.server.port: 9100
    networks:
      - 'srv'
    restart: 'always'

  prometheus:
    image: 'prom/prometheus:${PROMETHEUS_IMAGE_VERSION:-v2.22.0}'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - 'alertmanager'
      - 'cadvisor'
      - 'node_exporter'
    healthcheck:
      test: ['CMD', 'wget', '-q', '--spider', '--proxy=off', 'localhost:9090']
    labels:
      traefik.enable: true
      traefik.http.routers.prometheus.middlewares: 'basic_auth@docker'
      traefik.http.routers.prometheus.rule: 'Host(`prometheus.${SITE:-localhost}`)'
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
    networks:
      - 'srv'
    restart: 'always'
    user: '1000:1000'
    volumes:
      - './prometheus/data:/prometheus'
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - './prometheus/rules:/etc/prometheus/rules'
